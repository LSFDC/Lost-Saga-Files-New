#ifndef ___PROTOCOL_H__
#define ___PROTOCOL_H__


//CLIENT SEND TCP MONITORING PACKET
#define CTPKM_REQUEST_NUM_CONNECT					0x8001
#define CTPKM_ANNOUNCE								0x8002
#define CTPKM_UPDATE_CLIENT_VERSION					0x8003
#define CTPKM_LOAD_CS3_FILE							0x8004
#define CTPKM_MONITOR_IP							0x8005
#define CTPKM_CS3_FILE_VERSION						0x8006
#define CTPKM_SERVER_INFO_REQUEST					0x8007
#define CTPKM_MAINSERVER_EXIT						0x8008
#define CTPKM_MAINSERVER_QUICKALLEXIT				0x8009
#define CTPKM_MAINSERVER_SAFETYALLEXIT				0x8010
#define CTPKM_MAINSERVER_RELOADCLOSEINFO			0x8011
#define	CTPKM_MAINSERVER_DBAGENT_EXTEND				0x8012
#define CTPKM_MAINSERVER_GAMESERVER_OPTION			0x8013
#define CTPKM_MAINSERVER_GAMESERVER_RELOADINI		0x8014
#define CTPKM_MAINSERVER_EXTRAITEM_INI				0x8015
#define CTPKM_MAINSERVER_EVENTSHOP_INI				0x8016
#define CTPKM_GAMESERVER_PROTOCAL					0x8017
#define	CTPKM_GAMESERVER_RELOAD_HACK_CONSTANT		0x8018
#define CTPKM_GAMESERVER_RELOAD_USER_DISPERSION		0x8019
#define CTPKM_GAMESERVER_RELOAD_PROCESS_INI			0x8020
#define CTPKM_GAMESERVER_RELOAD_INI_CLASS			0x8021
#define CTPKM_GAMESERVER_RELOAD_INI_DECO			0x8022
#define CTPKM_GAMESERVER_RELOAD_INI_ETC				0x8023
#define CTPKM_GAMESERVER_RELOAD_INI_EVENT			0x8024
#define CTPKM_GAMESERVER_RELOAD_QUEST_INI			0x8025
#define CTPKM_GAMESERVER_RELOAD_MODE_INI			0x8026
#define CTPKM_GAMESERVER_RELOAD_PRESENT_INI			0x8027
#define CTPKM_GAMESERVER_RELOAD_FISHING_INI			0x8028
#define CTPKM_GAMESERVER_RELOAD_EXCA				0x8029
#define CTPKM_GAMESERVER_RELOAD_ITEM_COMPOUND_INI	0x8030
#define CTPKM_GAMESERVER_RELOAD_EXTRAITEM_INI		0x8031
#define CTPKM_GAMESERVER_RELOAD_TRADE_INI			0x8032
#define CTPKM_GAMESERVER_RELOAD_LEVELMATCH_INI		0x8033
#define CTPKM_GAMESERVER_RELOAD_ITEM_INIT_CONTROL	0x8034
#define CTPKM_GAMESERVER_RELOAD_CONFIG_INI			0x8035
#define CTPKM_GAMESERVER_QUICK_EXIT					0x8036
#define CTPKM_GAMESERVER_SAFETY_EXIT				0x8037
#define	CTPKM_MAINSERVER_GS_SETNAGLE_REFCOUNT		0x8038
#define CTPKM_MAINSERVER_GS_SETNAGLE_TIME			0x8039
#define CTPKM_MAINSERVER_ADMINCOMMAND				0x8040
#define CTPKM_GAMESERVER_CHANGE_RELAYSVR_STATE      0x8041
#define CTPKM_MAINSERVER_RESETEVENTSHOP				0x8042
#define CTPKM_BILLINGSERVER_USER_REQUEST			0x8043
#define CTPKM_BILLINGSERVER_FIRST_CONNECT			0x8044
#define CTPKM_BILLINGSERVER_RELOAD_INI				0x8045
#define CTPKM_BILLINGSERVER_NEXONPCROOM_LOGOUT		0x8046
#define CTPKM_LICENSE_REQUEST						0X8047
#define CTPKM_WHITELIST_REQUEST						0X8048
#define CTPKM_MAINSERVER_RESETMILEGESHOP			0x8049
#define CTPKM_MAINSERVER_RESET_OLDMISSIONDATA		0x8051

//SERVER SEND TCP MONITORING PACKET
#define STPKM_ANSWER_NUM_CONNECT					0x8501
#define STPKM_SERVER_DISCONNECT						0x8502
#define STPKM_LOAD_CS3_FILE							0x8503
#define STPKM_CS3_FILE_VERSION						0x8504
#define STPKM_ALL_SERVER_INFO						0x8505
#define STPKM_SERVER_INFO_ACK						0x8506
#define STPKM_ADMIN_RESPONSE						0x8507
#define STPKM_SERVER_INFO_COMPLETE_ACK				0x8508
#define STPKM_BILLING_USER							0x8509
#define STPKM_ANSWER_BILLING_CONNECT				0x8510
#define STPKM_BILLINGSERVER_RELOAD_INI				0x8511
#define STPKM_COUNTRY_CCU_COUNT						0x8512
#define STPKM_LICENSE_ALERT_CHECK					0x8513

namespace LOGIN_SVR
{
	enum PROTOCOL
	{
		TEST_SEND						= 0xd001,
		MNSTPK_STATUS_REQUEST			= 0x10601,
		MNSTPK_STATUS_RESULT			= 0x10602,
		MNSTPK_CHANGE_REQUEST			= 0x10603,
		MNSTPK_CHANGE_RESULT			= 0x10604,
		MNSTPK_CLOSE					= 0x10605,

		LSTPK_STATUS_REQUEST			= 0x10680,
		LSTPK_CONNECT_CLIENT			= 0x10681,
		LSTPK_SVR_STATUS_RESPONSE		= 0x10682,
		LSPTK_LS_LOGINSVR_CONNECT		= 0x10683,
		LSPTK_TICKET_REQUEST			= 0x10684,
		LSPTK_TICKET_RESPONSE			= 0x10685,
		LSPTK_TIMEOUT_CLOSE_REQUEST		= 0x10686,
		LSPTK_ERROR						= 0x10687,
		LSPTK_CONNECT_MONITOR			= 0x10688,
		LSPTK_CONTROL_SERVER			= 0x10689,
		LSPTK_SERVER_RESPONSE			= 0x10690,
		LSPTK_PING						= 0x10691,
		LSPTK_SERVER_FILLINFO			= 0x10692,
		LSPTK_WHITELIST_REQUEST			= 0x10698,
		
	};
}


// CTPKM_ANNOUNCE
#define ANNOUNCE_TYPE_ALL					1
#define ANNOUNCE_TYPE_ONE					2
#define ANNOUNCE_TYPE_DISCONNECT			3

// STPKM_LOAD_CS3_FILE 
#define LOAD_CS3_FILE_SUCCESS				1
#define LOAD_CS3_FILE_FAIL					2
#define LOAD_CS3_FILE_WRONG_VERSION			3
#define LOAD_CS3_FILE_NOT_FILE				4
#define LOAD_CS3_FILE_CHANGE_WRONG			5
#define LOAD_CS3_FILE_EXIST_VERSION			6

// STPKM_CS3_VERSION
#define CS3_VERSION_SUCCESS					1
#define CS3_VERSION_FAIL					2

// 게임서버 종료 타입
#define ALL_SERVER_QUICK_EXIT				0
#define ALL_SERVER_SAFETY_EXIT				1

enum AdminCommandTypes
{
	ADMINCOMMAND_NONE = 0,
	ADMINCOMMAND_KICK,
	ADMINCOMMAND_ANNOUNCE,
	ADMINCOMMAND_ITEMINSERT,
	ADMINCOMMAND_EVENTINSERT,
	ADMINCOMMAND_AUTH,
	ADMINCOMMAND_USERBLOCK,
	ADMINCOMMAND_USERUNBLOCK,
	ADMINCOMMAND_SECRETSHOP,
	ADMINCOMMAND_COMPENSATION,
	ADMINCOMMAND_END
};

enum BLOCKTYPE
{
	BLOCKTYPE_NONE = 0,		
	BLOCKTYPE_WARNING,		// 주의
	BLOCKTYPE_LIMITATION,	// 제한
	BLOCKTYPE_BLOCK,		// 차단
	BLOCKTYPE_UNBLOCK,		// 해제
	BLOCKTYPE_END
};
// DB에 저장되는 값으로 순차적으로 증가하지 않는다.
enum BlockType
{
	BKT_NONE        = -1,
	BKT_NORMAL      =  0,   // 차단안됨 (정상)
	BKT_WARNNING    = 10,   // 경고 ( 약 )
	BKT_LIMITATION  = 20,   // 제한 ( 중 )
	BKT_BLOCK       = 100,  // 차단 ( 강 )
};

enum AdminLevels
{
	ADMIN_LEVEL_NONE = 0,
	ADMIN_LEVEL_OPERATOR,
	ADMIN_LEVEL_ADMINISTRATOR,
	ADMIN_LEVEL_DEVELOPER,
	ADMIN_LEVEL_END
};


#endif